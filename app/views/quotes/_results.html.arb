panel 'Resultado da Cotação', class: "quote-results-panel #{'warned-results' if !quote.new_record? && quote.below_markup?}" do
  attributes_table_for quote do
    if quote.new_record?
      para 'Primeiro você tem que simular uma cotação para ver os resultados!', class: 'simulate-msg'
    elsif quote.errors.any?
      para "Cotação inválida, não pode calcular o resultado:", class: 'simulate-msg'
      para '&#8226; '.html_safe + quote.errors.full_messages.join('</br>&#8226; ').html_safe, class: 'simulate-msg errors'#, style: 'color: red; margin-top: 0px;'
    else
      row :optimal_markup_amount
      row(:table_value) { |q| 100 * q.optimal_markup.table_value.round(2) if q.optimal_markup.try(:table_value) }
      row :mark_up_porcentage
      row(:unit) { |q| q.product&.unit&.upcase }
      row(:currency) { |q| q.cost&.currency&.upcase }
      row :final_base_price
      row :calculated_markup_amount
      row :unit_freight_amount
      row :icms_amount
      row :pis_confins_amount
      row :encargos_amount
      row :fob_net_rounded
      row :taxed_charged_freight
      row :unit_price_amount
      row :total_price
      row :mcb
    end
  end
end
panel 'Ultima Venda', class: 'last-sale-panel' do
  attributes_table_for quote.last_sale || Sale.new do
    row :base_price
    row('Mark-Up (%)') { |v| v.markup * 100 if v.markup }
    row :unit_price
    row :volume
    row('Data') { |v| v.sale_date.to_date if v.sale_date}
    row :dist_center
    row :user
  end
end
